"""empty message

Revision ID: bde2978bb69f
Revises: 
Create Date: 2020-03-13 19:21:52.509731

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bde2978bb69f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('CAPEC',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('capecId', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('abstraction', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('alternateTerms', sa.String(), nullable=True),
    sa.Column('likelihoodOfAttack', sa.String(), nullable=True),
    sa.Column('typicalSeverity', sa.String(), nullable=True),
    sa.Column('relatedAttackpatterns', sa.String(), nullable=True),
    sa.Column('executionFlow', sa.String(), nullable=True),
    sa.Column('prerequisites', sa.String(), nullable=True),
    sa.Column('skillsRequired', sa.String(), nullable=True),
    sa.Column('resourcesRequired', sa.String(), nullable=True),
    sa.Column('indicators', sa.String(), nullable=True),
    sa.Column('consequences', sa.String(), nullable=True),
    sa.Column('mitigations', sa.String(), nullable=True),
    sa.Column('exampleInstances', sa.String(), nullable=True),
    sa.Column('relatedWeaknesses', sa.String(), nullable=True),
    sa.Column('taxonomyMappings', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_CAPEC_capecId'), 'CAPEC', ['capecId'], unique=True)
    op.create_table('CVETable',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('CVEId', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('accessVector', sa.String(), nullable=True),
    sa.Column('accessComplexity', sa.String(), nullable=True),
    sa.Column('authentication', sa.String(), nullable=True),
    sa.Column('confidentialityImpact', sa.String(), nullable=True),
    sa.Column('integrityImpact', sa.String(), nullable=True),
    sa.Column('availabilityImpact', sa.String(), nullable=True),
    sa.Column('baseScore', sa.Float(), nullable=True),
    sa.Column('severity', sa.String(), nullable=True),
    sa.Column('exploitabilityScore', sa.Float(), nullable=True),
    sa.Column('impactScore', sa.Float(), nullable=True),
    sa.Column('obtainAllPrivilege', sa.Boolean(), nullable=True),
    sa.Column('obtainUserPrivilege', sa.Boolean(), nullable=True),
    sa.Column('obtainOtherPrivilege', sa.Boolean(), nullable=True),
    sa.Column('userInteractionRequired', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_CVETable_CVEId'), 'CVETable', ['CVEId'], unique=True)
    op.create_index(op.f('ix_CVETable_description'), 'CVETable', ['description'], unique=False)
    op.create_table('CWE',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('CWEId', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('weakness', sa.String(), nullable=True),
    sa.Column('abstraction', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('extendedDescription', sa.String(), nullable=True),
    sa.Column('relatedWeaknesses', sa.String(), nullable=True),
    sa.Column('weaknessOrdinalities', sa.String(), nullable=True),
    sa.Column('applicablePlatforms', sa.String(), nullable=True),
    sa.Column('backgroundDetails', sa.String(), nullable=True),
    sa.Column('alternateTerms', sa.String(), nullable=True),
    sa.Column('modesOfIntroduction', sa.String(), nullable=True),
    sa.Column('exploitationFactors', sa.String(), nullable=True),
    sa.Column('likelihoodOfExploit', sa.String(), nullable=True),
    sa.Column('commonConsequences', sa.String(), nullable=True),
    sa.Column('detectionMethods', sa.String(), nullable=True),
    sa.Column('potentialMitigations', sa.String(), nullable=True),
    sa.Column('observedExamples', sa.String(), nullable=True),
    sa.Column('functionalAreas', sa.String(), nullable=True),
    sa.Column('affectedResources', sa.String(), nullable=True),
    sa.Column('taxonomyMappings', sa.String(), nullable=True),
    sa.Column('relatedAttackPatterns', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_CWE_CWEId'), 'CWE', ['CWEId'], unique=True)
    op.create_table('VReportTable',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('reportId', sa.String(), nullable=True),
    sa.Column('creation_time', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('comments', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_VReportTable_reportId'), 'VReportTable', ['reportId'], unique=True)
    op.create_table('association',
    sa.Column('left_id', sa.Integer(), nullable=False),
    sa.Column('right_id', sa.Integer(), nullable=False),
    sa.Column('VReport_assetID', sa.String(), nullable=True),
    sa.Column('VReport_assetIp', sa.String(), nullable=True),
    sa.Column('VReport_port', sa.String(), nullable=True),
    sa.Column('comments', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['left_id'], ['VReportTable.id'], ),
    sa.ForeignKeyConstraint(['right_id'], ['CVETable.id'], ),
    sa.PrimaryKeyConstraint('left_id', 'right_id')
    )
    op.create_table('cVecWeTable',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cve_id', sa.Integer(), nullable=False),
    sa.Column('cwe_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cve_id'], ['CVETable.id'], ),
    sa.ForeignKeyConstraint(['cwe_id'], ['CWE.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cVecWeTable')
    op.drop_table('association')
    op.drop_index(op.f('ix_VReportTable_reportId'), table_name='VReportTable')
    op.drop_table('VReportTable')
    op.drop_index(op.f('ix_CWE_CWEId'), table_name='CWE')
    op.drop_table('CWE')
    op.drop_index(op.f('ix_CVETable_description'), table_name='CVETable')
    op.drop_index(op.f('ix_CVETable_CVEId'), table_name='CVETable')
    op.drop_table('CVETable')
    op.drop_index(op.f('ix_CAPEC_capecId'), table_name='CAPEC')
    op.drop_table('CAPEC')
    # ### end Alembic commands ###
